buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath 'com.bugsnag:bugsnag-android-gradle-plugin:5.0.1'
        classpath 'com.google.gms:google-services:4.3.3'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

ext {
    // Build name
    buildName = "1.3.4"

    // Build number
    buildNumber = 61

    // Build prefix (Google)
    googleBuildPrefix = 16

    // SDK versions
    compileSdkVersion = 29
    targetSdkVersion = 29
    minSdkVersion = 16

    // Build tools version
    buildToolsVersion = "29.0.3"
}

apply plugin: 'com.android.application'
apply plugin: "com.bugsnag.android.gradle"

android {
    signingConfigs {
        release {
            keyAlias "password"
            keyPassword "password"
            storeFile file("fakekeys.jks")
            storePassword "password"
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.bugsnag.example"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        if (rootProject.ext.buildNumber >= 100 ) {
            versionCode = rootProject.ext.googleBuildPrefix * 1000 + rootProject.ext.buildNumber
            versionName "${rootProject.ext.buildName}-${rootProject.ext.googleBuildPrefix}${rootProject.ext.buildNumber}"
        } else {
            versionCode = rootProject.ext.googleBuildPrefix * 100 + rootProject.ext.buildNumber
            if ( rootProject.ext.buildNumber < 10 ) {
                versionName "${rootProject.ext.buildName}-${rootProject.ext.googleBuildPrefix}0${rootProject.ext.buildNumber}"
            } else {
                versionName "${rootProject.ext.buildName}-${rootProject.ext.googleBuildPrefix}${rootProject.ext.buildNumber}"
            }
        }

        vectorDrawables.useSupportLibrary = true
        resConfigs "en", "fr", "en-rGB", "pl", "pt-rBR", "uk"
        setProperty("archivesBaseName", applicationId + "-" + versionCode)
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.release
        }
        udebug {
            debuggable false
            applicationIdSuffix ".udebug"
            versionNameSuffix "-udebug"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            matchingFallbacks = ['release']
        }
        rdebug {
            debuggable false
            applicationIdSuffix ".rdebug"
            versionNameSuffix "-rdebug"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            matchingFallbacks = ['release']
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    bundle {
        density.enableSplit = true
        abi.enableSplit = true
        language.enableSplit = false
    }

    flavorDimensions "store"
    productFlavors {
        google {
            dimension "store"
            isDefault.set(true)
        }
    }

    variantFilter { variant ->
        def flavorString = ""
        def flavors = variant.getFlavors()
        for (int i = 0; i < flavors.size(); i++) {
            flavorString += flavors[i].name
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${variant.applicationId}-${variant.versionCode}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'MissingDefaultResource'
    }
}

dependencies {
    implementation "com.bugsnag:bugsnag-android:5.0.2"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.72"
}

task doTheGoogleThing(dependsOn: ['assembleGoogleDebug', 'assembleGoogleRelease']) {}
task doTheAmazonThing(dependsOn: ['assembleAmazonDebug', 'assembleAmazonRelease']) {}
task doTheEverything(dependsOn: ['assembleGoogleDebug', 'assembleGoogleRelease', 'assembleAmazonDebug', 'assembleAmazonRelease']) {}
task releaseOnly(dependsOn: ['assembleGoogleRelease', 'assembleAmazonRelease']) {}
